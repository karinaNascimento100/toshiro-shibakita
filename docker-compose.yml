services:
  reverse-proxy:
    image: nginx:alpine
    ports: ["80:80"]
    volumes:
      - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on: [api]
    networks: [app-net]
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://127.0.0.1/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5

  api:
    build: ./api
    environment:
      - PORT=3000
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
    expose: ["3000"]
    networks: [app-net]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5

  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASS}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
    volumes:
      - dbdata:/var/lib/mysql
    networks: [app-net]
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u${DB_USER} -p${DB_PASS} --silent"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  dbdata:

networks:
  app-net:
    driver: bridge
